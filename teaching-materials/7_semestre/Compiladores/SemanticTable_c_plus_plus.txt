/*
 * Template to help verify type compatibility in a Semantic Analyzer.
 * Available to Computer Science course at UNIVALI.
 * Professor Eduardo Alves da Silva.
 */

#ifndef SEMANTIC_TABLE_H
#define SEMANTIC_TABLE_H

class SemanticTable {
public:
    enum Types {INT = 0,FLO, CHA, STR,BOO};
    enum Operations {SUM = 0,SUB,MUL,DIV,REL,MOD,POT,ROO,AND,OR_};
    enum Status {ERR = -1,WAR,OK_};

    // TIPO DE RETORNO DAS EXPRESSOES ENTRE TIPOS
    // 5 x 5 X 10  = TIPO X TIPO X OPER
    static int const expTable [5][5][10];

    // atribuicoes compativeis
    // 5 x 5 = TIPO X TIPO
    static int const atribTable [5][5];

    static int resultType (int TP1, int TP2, int OP) {
        if(TP1 < 0 || TP2 < 0 || OP < 0) {
            return ERR;
        }
        return (expTable[TP1][TP2][OP]);
    }

    static int atribType (int TP1, int TP2){
        if(TP1 < 0 || TP2 < 0) {
            return ERR;
        }
        return (atribTable[TP1][TP2]);
    }

//    SemanticTable();
};

int const SemanticTable::expTable[5][5][10] =
            {/*                INT                  */ /*                 FLOAT               */ /*                 CHAR                */ /*               STRING                */ /*                 BOOL                */
       /*     SUM,SUB,MUL,DIV,REL,MOD,POT,SQT,AND,OR_ , SUM,SUB,MUL,DIV,REL,MOD,POT,SQT,AND,OR_ , SUM,SUB,MUL,DIV,REL,MOD,POT,SQT,AND,OR_ , SUM,SUB,MUL,DIV,REL,MOD,POT,SQT,AND,OR_ , SUM,SUB,MUL,DIV,REL,MOD,POT,SQT,AND,OR_     */
/*INT   */  {{INT,INT,INT,FLO,BOO,INT,INT,FLO,ERR,ERR},{FLO,FLO,FLO,FLO,BOO,ERR,FLO,FLO,ERR,ERR},{ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR},{ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR},{ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR,ERR}},
/*FLOAT */  {{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,}},
/*CHAR  */  {{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,}},
/*STRING*/  {{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,}},
/*BOOL  */  {{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,},{,,,,,,,,,}}
            };

int const SemanticTable::atribTable[5][5]=
    {     /* INT FLO CHA STR BOO  */
    /*INT*/ {OK_,WAR,ERR,ERR,ERR},
    /*FLO*/ {,,,,},
    /*CHA*/ {,,,,},
    /*STR*/ {,,,,},
    /*BOO*/ {,,,,}
    };

#endif // SEMANTIC_TABLE_H
