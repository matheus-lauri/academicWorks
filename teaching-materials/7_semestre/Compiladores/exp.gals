#Options
GenerateScanner = true
GenerateParser = true
Language = C++
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = SLR
#RegularDefinitions
d:[0-9]
l:[a-zA-Z]
w:[\ \t\n\s\r]
#Tokens
//aritmeticos
"+"
"-"
"*"
"/"
"%"
//relacional
">"
"<"
">="
"<="
"="
"!="
//logicos
"&&"
"||"
"!"
// bitwise
"~"
">>"
"<<"
"^"
"|"
"&"
// parenteses
"("
")"

id : {l}({l}|{d}|"_")*
num_int: {d}+
num_real: {d}+\.{d}+
: {w}+
#NonTerminals
<exp>
<exp1>
<exp2>
<exp3>
<exp4>
<exp5>
<exp6>
<exp7>
<exp8>
<exp9>
<exp10>
<op_rel>
<op_neg>
<op_bitwise>
<op_arit_baixa>
<op_arit_alta>
<op_arit_mais_alta>

#Grammar
<exp>  ::= <exp> "||" <exp1> | <exp1>;
<exp1> ::= <exp1> "&&" <exp2> | <exp2>;
<exp2> ::= <exp2> "|" <exp3> | <exp3>;
<exp3> ::= <exp3> "^" <exp4> | <exp4>;
<exp4> ::= <exp4> "&" <exp5> | <exp5>;
<exp5> ::= <exp5> <op_rel> <exp6> | <exp6>;
<exp6> ::= <exp6> <op_bitwise> <exp7> | <exp7>;
<exp7> ::= <exp7> <op_arit_baixa> <exp8> | <exp8>;
<exp8> ::= <exp8> <op_arit_alta> <exp9> | <exp9> ;
<exp9> ::= <op_neg> <exp10> | <exp10>;
<exp10> ::= num_int | num_real | id | "(" <exp> ")";

<op_rel> ::= ">" | "<" | ">=" | "<=" | "=" | "!="; 
<op_neg> ::= "-" | "~" | "!";
<op_bitwise> ::= "<<" | ">>";
<op_arit_baixa> ::= "+" | "-";
<op_arit_alta> ::= "*" | "/" | "%";


//Exemplo com tudo para ser usado no simulador
// -x + 8.8 - !x * 2 / ~y % 3 << 7 != y >> 3 || (x <= 3 && y > 8) | p & (h ^ g)
