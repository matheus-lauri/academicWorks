# -*- coding: utf-8 -*-
"""Aula1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1khZ8l1H6joR12g62LngPHOqfUkAjpCUO

### Saída de dados

---

A função `print()` recebe como parâmetro uma sequência de `strings` e/ou variáveis (separados por vírgula) e os exibe na tela.
"""

print('Ola Mundo')

print("Batata")

print('Olá Mundo')

"""### Variáveis

---

Imprimir somente texto não é interessante, precisamos de variáveis para armazenar valores e manter nosso programa mais interativo. 

Como é comum nas linguagens de programação, as variáveis em Python podem armazenar diferentes tipos: números(`int`, `float`), texto(`str`), booleanos(`bool`) ...

O que pode ser diferente do que estamos acostumados é que aqui não declaramos o tipo, ele é definido pelo valor atribuído. O operador de `=` é utilizado para a atribuição de valores.
"""

nome = "Rodrigo"
idade = 30
preco = 1.25

print("Meu nome é", nome)

preco = preco + 15

print(preco)


print(preco)
#print(preco)

#preco = "Caro"

#print(preco)

soma = 2 + 2
subtracao = 5 - 1
multiplicacao = 3 * 4
divisao = 1 / 2
print(soma)
print(divisao)

x = 30
x = x + 3
print(x)
y = False
y = True
z = "Batata"

print(x)
print(y)
print(z)

x = "Rodrigo"


print(x)

"""Mesmo sem precisar declarar o tipo, precisamos de uma atribuição direta para a declaração da variável, o valor atribuído reserva a posição de memória e define o tipo da variável em tempo de execução. 

Uma variável pode ser redeclarada ao atribuir um valor diretamente de um tipo diferente, mas devemos tomar cuidado com as operações que serão feitas com elas.
"""

#Imprime o 10 na tela
x = 10
print(x)

x = 15
valor = x * 5
print(valor)
print(x)

nome = "Rodrigo"
frase = "Seu nome é " + nome
print(frase)

nome = "João"
frase = "Seu nome é " + nome
print(frase)

"""### Operadores Aritméticos

---

Os operadores aritméticos para trabalhar com as variáveis são os seguintes:
"""

import math

#Adição           +
print("Adição:", 2 + 2)

#Subtração        -
print("Subtração:", 3 - 1)

#Multiplicação    *
print("Multiplicação:", 3 * 4)

#Divisão          /
print("Divisão:", 10 / 3)

#Divisão Inteira  //
print("Divisão Inteira:", 13 // 3)

#Módulo           %
print("Módulo:", 13 % 3)

#Expoencial       **
print("Expoencial:", 2 ** 3)


#Raiz
print("Raiz:", 9 ** (1/2))



"""### Entrada de dados

---

O comando para entrada de dados do usuário é a função `input()`, o comando recebe como parâmetro um texto que será exibido na tela e aguardará uma entrada do usuário. 

O valor digitado então é atribuído à uma variável que receba a função como uma atribuição.
"""

input("legal")

cor = input("Escolha uma cor: ") 
print("A cor escolhida foi", cor)

x = input("Digite um número: ") 
dobro = x + 2 
print("O dobro do número é ", dobro) #essa linha não dará certo

"""Como os tipos dos dados em Python não são explícitos pelo usuário, algumas vezes precisamos dizer o que queremos. 

No caso anterior, o `input()` por padrão considera que o usuário digitou uma string(`str`), mas nem sempre é assim, como vimos anteriormente. 

Outro caso é na concatenação de strings, que não aceitam a soma direta com números. 

Para isso existem funções como `int()` e `str()` que recebem uma variável por parâmetro e retornam o mesmo valor com o tipo convertido.
"""



x = input("Digite um número: ")
otoX = int(x) 
dobro = otoX * 2 
print("O dobro do número é ", dobro)

x = float(input("Digite um número: "))
dobro = x * 2 
print("O dobro do número é ", dobro)

frase = "A resposta é " 
resposta = 2
resposta = str(resposta)
frase = frase + resposta #errado
#frase = frase + str(resposta) #certo
print(frase)

